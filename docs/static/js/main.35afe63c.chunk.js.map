{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","className","placeholder","type","value","onChange","texto","target","getGifs","category","a","urlApi","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","url","images","original","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACAJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAKd,SACI,uBACAO,UAAW,wCACXC,YAAa,iBACbC,KAAK,OACLC,MAAQX,EACRY,SArBiB,SAACC,GAEtBZ,EAAeY,EAAMC,OAAOH,a,+BCRvBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEuCC,UAAUH,GAFjD,+DAIKI,MAAMF,GAJX,cAIbG,EAJa,gBAMEA,EAAUC,OANZ,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,SAASF,QAZf,kBAgBZL,GAhBY,4CAAH,sDCAPQ,EAAc,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEhC,OACI,sBAAKrB,UAAU,6CAAf,UACI,qBAAKyB,IAAKJ,EAAKK,IAAKN,IACpB,kCAAKA,EAAL,WCFCO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAIvB,ECNwB,SAAEA,GAE1B,MAA0BjB,mBAAS,CAC/BwB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAd,GAGFY,EAAS,CACLf,KAAKG,EACLU,SAAS,SAMvB,CAACpB,IAGIqB,EDlBwBI,CAAczB,GAAjCc,EAAZ,EAAOP,KAAaa,EAApB,EAAoBA,QASpB,OACI,qCACI,qBAAI5B,UAAW,wCAAf,cAAyDQ,EAAzD,OAECoB,GAAW,mBAAG5B,UAAY,mCAAf,qBAEZ,qBAAKA,UAAU,YAAf,SAGQsB,EAAOL,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEapBe,EArCO,WAElB,MAAoC3C,mBAAS,CAAE,eAA/C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OAEI,qCACI,sBAAKU,UAAW,MAAhB,UACA,oBAAIA,UAAY,4CAAhB,0BAEA,cAAC,EAAD,CAAaV,cAAiBA,OAE9B,oBAAIU,UAAU,SAId,6BAEQmC,EAAWlB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEIA,SAAYA,GADLA,YCzB/B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.35afe63c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange= (texto) => {\r\n\r\n        setInputValue (texto.target.value)\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n      if (inputValue.trim().length>2){\r\n        setCategories(cat => [inputValue,...cat]);\r\n        setInputValue('');\r\n      }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n            className= 'animate__animated animate__fadeInDown'\r\n            placeholder= 'Search gifs...'\r\n            type='text'\r\n            value= {inputValue}\r\n            onChange= {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const urlApi = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=1FfTbKnMrWkZ9GPXut4SUSt1RjYjzCTp`;\r\n\r\n    const respuesta = await fetch(urlApi);\r\n\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map (img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.original.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown'>\r\n            <img src={url} alt={title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    // const [images, setimages] = useState([])\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    // useEffect( () => {\r\n    //     getGifs(category)\r\n    //     .then(imgs=>setimages(imgs));\r\n    // }, [category])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className= 'animate__animated animate__fadeInDown'> {category} </h3>\r\n            \r\n            {loading && <p className = 'animate__animated animate__flash'>Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(img =>{\r\n\r\n                    \r\n                setState({\r\n                    data:img,\r\n                    loading: false,\r\n                })\r\n\r\n                \r\n            })\r\n\r\n    },[category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\n\r\nconst GiftExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState([ 'DragonBall' ]);\r\n\r\n    // const handleAdd = () => {\r\n    //    seTcategories([...categories, 'HunterXHunter']);\r\n    // }\r\n\r\n\r\n    return (\r\n        \r\n        <>\r\n            <div className= 'top'>       \r\n            <h1 className = 'App animate__animated animate__fadeInDown'>GidExpertApp</h1>\r\n\r\n            <AddCategory setCategories = {setCategories}/>\r\n            </div> \r\n            <hr className='Line'/>\r\n            \r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                    <GifGrid \r\n                        key = {category}\r\n                        category = {category} \r\n                    />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}